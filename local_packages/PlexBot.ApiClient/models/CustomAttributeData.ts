/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomAttributeTypedArgument } from './CustomAttributeTypedArgument';
import {
    CustomAttributeTypedArgumentFromJSON,
    CustomAttributeTypedArgumentFromJSONTyped,
    CustomAttributeTypedArgumentToJSON,
} from './CustomAttributeTypedArgument';
import type { CustomAttributeNamedArgument } from './CustomAttributeNamedArgument';
import {
    CustomAttributeNamedArgumentFromJSON,
    CustomAttributeNamedArgumentFromJSONTyped,
    CustomAttributeNamedArgumentToJSON,
} from './CustomAttributeNamedArgument';
import type { ConstructorInfo } from './ConstructorInfo';
import {
    ConstructorInfoFromJSON,
    ConstructorInfoFromJSONTyped,
    ConstructorInfoToJSON,
} from './ConstructorInfo';

/**
 * 
 * @export
 * @interface CustomAttributeData
 */
export interface CustomAttributeData {
    /**
     * 
     * @type {string}
     * @memberof CustomAttributeData
     */
    attributeType?: string;
    /**
     * 
     * @type {ConstructorInfo}
     * @memberof CustomAttributeData
     */
    constructor?: ConstructorInfo;
    /**
     * 
     * @type {Array<CustomAttributeTypedArgument>}
     * @memberof CustomAttributeData
     */
    constructorArguments?: Array<CustomAttributeTypedArgument>;
    /**
     * 
     * @type {Array<CustomAttributeNamedArgument>}
     * @memberof CustomAttributeData
     */
    namedArguments?: Array<CustomAttributeNamedArgument>;
}

/**
 * Check if a given object implements the CustomAttributeData interface.
 */
export function instanceOfCustomAttributeData(value: object): value is CustomAttributeData {
    return true;
}

export function CustomAttributeDataFromJSON(json: any): CustomAttributeData {
    return CustomAttributeDataFromJSONTyped(json, false);
}

export function CustomAttributeDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomAttributeData {
    if (json == null) {
        return json;
    }
    return {
        
        'attributeType': json['attributeType'] == null ? undefined : json['attributeType'],
        'constructor': json['constructor'] == null ? undefined : ConstructorInfoFromJSON(json['constructor']),
        'constructorArguments': json['constructorArguments'] == null ? undefined : ((json['constructorArguments'] as Array<any>).map(CustomAttributeTypedArgumentFromJSON)),
        'namedArguments': json['namedArguments'] == null ? undefined : ((json['namedArguments'] as Array<any>).map(CustomAttributeNamedArgumentFromJSON)),
    };
}

export function CustomAttributeDataToJSON(value?: CustomAttributeData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attributeType': value['attributeType'],
        'constructor': ConstructorInfoToJSON(value['constructor']),
        'constructorArguments': value['constructorArguments'] == null ? undefined : ((value['constructorArguments'] as Array<any>).map(CustomAttributeTypedArgumentToJSON)),
        'namedArguments': value['namedArguments'] == null ? undefined : ((value['namedArguments'] as Array<any>).map(CustomAttributeNamedArgumentToJSON)),
    };
}

