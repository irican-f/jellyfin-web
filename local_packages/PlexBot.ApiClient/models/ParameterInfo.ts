/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomAttributeData } from './CustomAttributeData';
import {
    CustomAttributeDataFromJSON,
    CustomAttributeDataFromJSONTyped,
    CustomAttributeDataToJSON,
} from './CustomAttributeData';
import type { MemberInfo } from './MemberInfo';
import {
    MemberInfoFromJSON,
    MemberInfoFromJSONTyped,
    MemberInfoToJSON,
} from './MemberInfo';
import type { ParameterAttributes } from './ParameterAttributes';
import {
    ParameterAttributesFromJSON,
    ParameterAttributesFromJSONTyped,
    ParameterAttributesToJSON,
} from './ParameterAttributes';

/**
 * 
 * @export
 * @interface ParameterInfo
 */
export interface ParameterInfo {
    /**
     * 
     * @type {ParameterAttributes}
     * @memberof ParameterInfo
     */
    attributes?: ParameterAttributes;
    /**
     * 
     * @type {MemberInfo}
     * @memberof ParameterInfo
     */
    member?: MemberInfo;
    /**
     * 
     * @type {string}
     * @memberof ParameterInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ParameterInfo
     */
    parameterType?: string;
    /**
     * 
     * @type {number}
     * @memberof ParameterInfo
     */
    position?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    isIn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    isLcid?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    isOptional?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    isOut?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    isRetval?: boolean;
    /**
     * 
     * @type {any}
     * @memberof ParameterInfo
     */
    defaultValue?: any;
    /**
     * 
     * @type {any}
     * @memberof ParameterInfo
     */
    rawDefaultValue?: any;
    /**
     * 
     * @type {boolean}
     * @memberof ParameterInfo
     */
    hasDefaultValue?: boolean;
    /**
     * 
     * @type {Array<CustomAttributeData>}
     * @memberof ParameterInfo
     */
    customAttributes?: Array<CustomAttributeData>;
    /**
     * 
     * @type {number}
     * @memberof ParameterInfo
     */
    metadataToken?: number;
}

/**
 * Check if a given object implements the ParameterInfo interface.
 */
export function instanceOfParameterInfo(value: object): value is ParameterInfo {
    return true;
}

export function ParameterInfoFromJSON(json: any): ParameterInfo {
    return ParameterInfoFromJSONTyped(json, false);
}

export function ParameterInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParameterInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['attributes'] == null ? undefined : ParameterAttributesFromJSON(json['attributes']),
        'member': json['member'] == null ? undefined : MemberInfoFromJSON(json['member']),
        'name': json['name'] == null ? undefined : json['name'],
        'parameterType': json['parameterType'] == null ? undefined : json['parameterType'],
        'position': json['position'] == null ? undefined : json['position'],
        'isIn': json['isIn'] == null ? undefined : json['isIn'],
        'isLcid': json['isLcid'] == null ? undefined : json['isLcid'],
        'isOptional': json['isOptional'] == null ? undefined : json['isOptional'],
        'isOut': json['isOut'] == null ? undefined : json['isOut'],
        'isRetval': json['isRetval'] == null ? undefined : json['isRetval'],
        'defaultValue': json['defaultValue'] == null ? undefined : json['defaultValue'],
        'rawDefaultValue': json['rawDefaultValue'] == null ? undefined : json['rawDefaultValue'],
        'hasDefaultValue': json['hasDefaultValue'] == null ? undefined : json['hasDefaultValue'],
        'customAttributes': json['customAttributes'] == null ? undefined : ((json['customAttributes'] as Array<any>).map(CustomAttributeDataFromJSON)),
        'metadataToken': json['metadataToken'] == null ? undefined : json['metadataToken'],
    };
}

export function ParameterInfoToJSON(value?: ParameterInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attributes': ParameterAttributesToJSON(value['attributes']),
        'member': MemberInfoToJSON(value['member']),
        'name': value['name'],
        'parameterType': value['parameterType'],
        'position': value['position'],
        'isIn': value['isIn'],
        'isLcid': value['isLcid'],
        'isOptional': value['isOptional'],
        'isOut': value['isOut'],
        'isRetval': value['isRetval'],
        'defaultValue': value['defaultValue'],
        'rawDefaultValue': value['rawDefaultValue'],
        'hasDefaultValue': value['hasDefaultValue'],
        'customAttributes': value['customAttributes'] == null ? undefined : ((value['customAttributes'] as Array<any>).map(CustomAttributeDataToJSON)),
        'metadataToken': value['metadataToken'],
    };
}

