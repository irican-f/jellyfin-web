/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchFilter } from './SearchFilter';
import {
    SearchFilterFromJSON,
    SearchFilterFromJSONTyped,
    SearchFilterToJSON,
} from './SearchFilter';
import type { MediaCategory } from './MediaCategory';
import {
    MediaCategoryFromJSON,
    MediaCategoryFromJSONTyped,
    MediaCategoryToJSON,
} from './MediaCategory';

/**
 * 
 * @export
 * @interface ApiMediaSearchRequest
 */
export interface ApiMediaSearchRequest {
    /**
     * 
     * @type {string}
     * @memberof ApiMediaSearchRequest
     */
    query?: string;
    /**
     * 
     * @type {MediaCategory}
     * @memberof ApiMediaSearchRequest
     */
    category?: MediaCategory;
    /**
     * 
     * @type {Array<SearchFilter>}
     * @memberof ApiMediaSearchRequest
     */
    filters?: Array<SearchFilter>;
    /**
     * 
     * @type {number}
     * @memberof ApiMediaSearchRequest
     */
    page?: number;
}

/**
 * Check if a given object implements the ApiMediaSearchRequest interface.
 */
export function instanceOfApiMediaSearchRequest(value: object): value is ApiMediaSearchRequest {
    return true;
}

export function ApiMediaSearchRequestFromJSON(json: any): ApiMediaSearchRequest {
    return ApiMediaSearchRequestFromJSONTyped(json, false);
}

export function ApiMediaSearchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiMediaSearchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'] == null ? undefined : json['query'],
        'category': json['category'] == null ? undefined : MediaCategoryFromJSON(json['category']),
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(SearchFilterFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
    };
}

export function ApiMediaSearchRequestToJSON(value?: ApiMediaSearchRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'query': value['query'],
        'category': MediaCategoryToJSON(value['category']),
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(SearchFilterToJSON)),
        'page': value['page'],
    };
}

