/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ISearchFilterOption } from './ISearchFilterOption';
import {
    ISearchFilterOptionFromJSON,
    ISearchFilterOptionFromJSONTyped,
    ISearchFilterOptionToJSON,
} from './ISearchFilterOption';

/**
 * 
 * @export
 * @interface SearchFilter
 */
export interface SearchFilter {
    /**
     * 
     * @type {string}
     * @memberof SearchFilter
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof SearchFilter
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SearchFilter
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof SearchFilter
     */
    valueLabel?: string;
    /**
     * 
     * @type {Array<ISearchFilterOption>}
     * @memberof SearchFilter
     */
    options?: Array<ISearchFilterOption>;
}

/**
 * Check if a given object implements the SearchFilter interface.
 */
export function instanceOfSearchFilter(value: object): value is SearchFilter {
    return true;
}

export function SearchFilterFromJSON(json: any): SearchFilter {
    return SearchFilterFromJSONTyped(json, false);
}

export function SearchFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'] == null ? undefined : json['label'],
        'name': json['name'] == null ? undefined : json['name'],
        'value': json['value'] == null ? undefined : json['value'],
        'valueLabel': json['valueLabel'] == null ? undefined : json['valueLabel'],
        'options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(ISearchFilterOptionFromJSON)),
    };
}

export function SearchFilterToJSON(value?: SearchFilter | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'label': value['label'],
        'name': value['name'],
        'value': value['value'],
        'valueLabel': value['valueLabel'],
        'options': value['options'] == null ? undefined : ((value['options'] as Array<any>).map(ISearchFilterOptionToJSON)),
    };
}

