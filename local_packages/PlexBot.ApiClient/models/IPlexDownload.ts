/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IPlexDownloadScheduledCrawl } from './IPlexDownloadScheduledCrawl';
import {
    IPlexDownloadScheduledCrawlFromJSON,
    IPlexDownloadScheduledCrawlFromJSONTyped,
    IPlexDownloadScheduledCrawlToJSON,
} from './IPlexDownloadScheduledCrawl';
import type { CancellationTokenSource } from './CancellationTokenSource';
import {
    CancellationTokenSourceFromJSON,
    CancellationTokenSourceFromJSONTyped,
    CancellationTokenSourceToJSON,
} from './CancellationTokenSource';
import type { IPlexDownloadError } from './IPlexDownloadError';
import {
    IPlexDownloadErrorFromJSON,
    IPlexDownloadErrorFromJSONTyped,
    IPlexDownloadErrorToJSON,
} from './IPlexDownloadError';

/**
 * 
 * @export
 * @interface IPlexDownload
 */
export interface IPlexDownload {
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    destinationFolder?: string;
    /**
     * 
     * @type {IPlexDownloadScheduledCrawl}
     * @memberof IPlexDownload
     */
    scheduledCrawl?: IPlexDownloadScheduledCrawl;
    /**
     * 
     * @type {boolean}
     * @memberof IPlexDownload
     */
    isRunning?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IPlexDownload
     */
    isCancelled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IPlexDownload
     */
    isCompleted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IPlexDownload
     */
    isDeadLink?: boolean;
    /**
     * 
     * @type {IPlexDownloadError}
     * @memberof IPlexDownload
     */
    error?: IPlexDownloadError;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    episodeIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    progress?: number;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    speed?: number;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    speedUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    averageSpeed?: number;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    averageSpeedUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    sizeReceived?: number;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    sizeUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    totalSize?: number;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    totalSizeUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof IPlexDownload
     */
    estimatedTime?: number;
    /**
     * 
     * @type {string}
     * @memberof IPlexDownload
     */
    estimatedTimeUnit?: string;
    /**
     * 
     * @type {CancellationTokenSource}
     * @memberof IPlexDownload
     */
    cancellationTokenSource?: CancellationTokenSource;
}

/**
 * Check if a given object implements the IPlexDownload interface.
 */
export function instanceOfIPlexDownload(value: object): value is IPlexDownload {
    return true;
}

export function IPlexDownloadFromJSON(json: any): IPlexDownload {
    return IPlexDownloadFromJSONTyped(json, false);
}

export function IPlexDownloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): IPlexDownload {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'url': json['url'] == null ? undefined : json['url'],
        'destinationFolder': json['destinationFolder'] == null ? undefined : json['destinationFolder'],
        'scheduledCrawl': json['scheduledCrawl'] == null ? undefined : IPlexDownloadScheduledCrawlFromJSON(json['scheduledCrawl']),
        'isRunning': json['isRunning'] == null ? undefined : json['isRunning'],
        'isCancelled': json['isCancelled'] == null ? undefined : json['isCancelled'],
        'isCompleted': json['isCompleted'] == null ? undefined : json['isCompleted'],
        'isDeadLink': json['isDeadLink'] == null ? undefined : json['isDeadLink'],
        'error': json['error'] == null ? undefined : IPlexDownloadErrorFromJSON(json['error']),
        'episodeIndex': json['episodeIndex'] == null ? undefined : json['episodeIndex'],
        'progress': json['progress'] == null ? undefined : json['progress'],
        'speed': json['speed'] == null ? undefined : json['speed'],
        'speedUnit': json['speedUnit'] == null ? undefined : json['speedUnit'],
        'averageSpeed': json['averageSpeed'] == null ? undefined : json['averageSpeed'],
        'averageSpeedUnit': json['averageSpeedUnit'] == null ? undefined : json['averageSpeedUnit'],
        'sizeReceived': json['sizeReceived'] == null ? undefined : json['sizeReceived'],
        'sizeUnit': json['sizeUnit'] == null ? undefined : json['sizeUnit'],
        'totalSize': json['totalSize'] == null ? undefined : json['totalSize'],
        'totalSizeUnit': json['totalSizeUnit'] == null ? undefined : json['totalSizeUnit'],
        'estimatedTime': json['estimatedTime'] == null ? undefined : json['estimatedTime'],
        'estimatedTimeUnit': json['estimatedTimeUnit'] == null ? undefined : json['estimatedTimeUnit'],
        'cancellationTokenSource': json['cancellationTokenSource'] == null ? undefined : CancellationTokenSourceFromJSON(json['cancellationTokenSource']),
    };
}

export function IPlexDownloadToJSON(value?: IPlexDownload | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'fileName': value['fileName'],
        'url': value['url'],
        'destinationFolder': value['destinationFolder'],
        'scheduledCrawl': IPlexDownloadScheduledCrawlToJSON(value['scheduledCrawl']),
        'isRunning': value['isRunning'],
        'isCancelled': value['isCancelled'],
        'isCompleted': value['isCompleted'],
        'isDeadLink': value['isDeadLink'],
        'error': IPlexDownloadErrorToJSON(value['error']),
        'episodeIndex': value['episodeIndex'],
        'progress': value['progress'],
        'speed': value['speed'],
        'speedUnit': value['speedUnit'],
        'averageSpeed': value['averageSpeed'],
        'averageSpeedUnit': value['averageSpeedUnit'],
        'sizeReceived': value['sizeReceived'],
        'sizeUnit': value['sizeUnit'],
        'totalSize': value['totalSize'],
        'totalSizeUnit': value['totalSizeUnit'],
        'estimatedTime': value['estimatedTime'],
        'estimatedTimeUnit': value['estimatedTimeUnit'],
        'cancellationTokenSource': CancellationTokenSourceToJSON(value['cancellationTokenSource']),
    };
}

