/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomAttributeTypedArgument } from './CustomAttributeTypedArgument';
import {
    CustomAttributeTypedArgumentFromJSON,
    CustomAttributeTypedArgumentFromJSONTyped,
    CustomAttributeTypedArgumentToJSON,
} from './CustomAttributeTypedArgument';
import type { MemberInfo } from './MemberInfo';
import {
    MemberInfoFromJSON,
    MemberInfoFromJSONTyped,
    MemberInfoToJSON,
} from './MemberInfo';

/**
 * 
 * @export
 * @interface CustomAttributeNamedArgument
 */
export interface CustomAttributeNamedArgument {
    /**
     * 
     * @type {string}
     * @memberof CustomAttributeNamedArgument
     */
    argumentType?: string;
    /**
     * 
     * @type {MemberInfo}
     * @memberof CustomAttributeNamedArgument
     */
    memberInfo?: MemberInfo;
    /**
     * 
     * @type {CustomAttributeTypedArgument}
     * @memberof CustomAttributeNamedArgument
     */
    typedValue?: CustomAttributeTypedArgument;
    /**
     * 
     * @type {string}
     * @memberof CustomAttributeNamedArgument
     */
    memberName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomAttributeNamedArgument
     */
    isField?: boolean;
}

/**
 * Check if a given object implements the CustomAttributeNamedArgument interface.
 */
export function instanceOfCustomAttributeNamedArgument(value: object): value is CustomAttributeNamedArgument {
    return true;
}

export function CustomAttributeNamedArgumentFromJSON(json: any): CustomAttributeNamedArgument {
    return CustomAttributeNamedArgumentFromJSONTyped(json, false);
}

export function CustomAttributeNamedArgumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomAttributeNamedArgument {
    if (json == null) {
        return json;
    }
    return {
        
        'argumentType': json['argumentType'] == null ? undefined : json['argumentType'],
        'memberInfo': json['memberInfo'] == null ? undefined : MemberInfoFromJSON(json['memberInfo']),
        'typedValue': json['typedValue'] == null ? undefined : CustomAttributeTypedArgumentFromJSON(json['typedValue']),
        'memberName': json['memberName'] == null ? undefined : json['memberName'],
        'isField': json['isField'] == null ? undefined : json['isField'],
    };
}

export function CustomAttributeNamedArgumentToJSON(value?: CustomAttributeNamedArgument | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'argumentType': value['argumentType'],
        'memberInfo': MemberInfoToJSON(value['memberInfo']),
        'typedValue': CustomAttributeTypedArgumentToJSON(value['typedValue']),
        'memberName': value['memberName'],
        'isField': value['isField'],
    };
}

