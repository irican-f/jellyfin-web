/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IPlexDownloadError } from './IPlexDownloadError';
import {
    IPlexDownloadErrorFromJSON,
    IPlexDownloadErrorFromJSONTyped,
    IPlexDownloadErrorToJSON,
} from './IPlexDownloadError';

/**
 * 
 * @export
 * @interface Exception
 */
export interface Exception {
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    message?: string;
    /**
     * 
     * @type {IPlexDownloadError}
     * @memberof Exception
     */
    innerException?: IPlexDownloadError;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    stackTrace?: string;
}

/**
 * Check if a given object implements the Exception interface.
 */
export function instanceOfException(value: object): value is Exception {
    return true;
}

export function ExceptionFromJSON(json: any): Exception {
    return ExceptionFromJSONTyped(json, false);
}

export function ExceptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Exception {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['Message'] == null ? undefined : json['Message'],
        'innerException': json['InnerException'] == null ? undefined : IPlexDownloadErrorFromJSON(json['InnerException']),
        'source': json['Source'] == null ? undefined : json['Source'],
        'stackTrace': json['StackTrace'] == null ? undefined : json['StackTrace'],
    };
}

export function ExceptionToJSON(value?: Exception | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Message': value['message'],
        'InnerException': IPlexDownloadErrorToJSON(value['innerException']),
        'Source': value['source'],
        'StackTrace': value['stackTrace'],
    };
}

