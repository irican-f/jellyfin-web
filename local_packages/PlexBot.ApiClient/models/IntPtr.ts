/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntPtr
 */
export interface IntPtr {
    /**
     * 
     * @type {number}
     * @memberof IntPtr
     */
    size?: number;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    maxValue?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    minValue?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsIAdditiveIdentitynintnintAdditiveIdentity?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsIBinaryNumbernintAllBitsSet?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsIMinMaxValuenintMinValue?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsIMinMaxValuenintMaxValue?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsIMultiplicativeIdentitynintnintMultiplicativeIdentity?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsINumberBasenintOne?: IntPtr;
    /**
     * 
     * @type {number}
     * @memberof IntPtr
     */
    systemNumericsINumberBasenintRadix?: number;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsINumberBasenintZero?: IntPtr;
    /**
     * 
     * @type {IntPtr}
     * @memberof IntPtr
     */
    systemNumericsISignedNumbernintNegativeOne?: IntPtr;
}

/**
 * Check if a given object implements the IntPtr interface.
 */
export function instanceOfIntPtr(value: object): value is IntPtr {
    return true;
}

export function IntPtrFromJSON(json: any): IntPtr {
    return IntPtrFromJSONTyped(json, false);
}

export function IntPtrFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntPtr {
    if (json == null) {
        return json;
    }
    return {
        
        'size': json['size'] == null ? undefined : json['size'],
        'maxValue': json['maxValue'] == null ? undefined : IntPtrFromJSON(json['maxValue']),
        'minValue': json['minValue'] == null ? undefined : IntPtrFromJSON(json['minValue']),
        'systemNumericsIAdditiveIdentitynintnintAdditiveIdentity': json['system.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.AdditiveIdentity'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.AdditiveIdentity']),
        'systemNumericsIBinaryNumbernintAllBitsSet': json['system.Numerics.IBinaryNumber&lt;nint&gt;.AllBitsSet'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.IBinaryNumber&lt;nint&gt;.AllBitsSet']),
        'systemNumericsIMinMaxValuenintMinValue': json['system.Numerics.IMinMaxValue&lt;nint&gt;.MinValue'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.IMinMaxValue&lt;nint&gt;.MinValue']),
        'systemNumericsIMinMaxValuenintMaxValue': json['system.Numerics.IMinMaxValue&lt;nint&gt;.MaxValue'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.IMinMaxValue&lt;nint&gt;.MaxValue']),
        'systemNumericsIMultiplicativeIdentitynintnintMultiplicativeIdentity': json['system.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.MultiplicativeIdentity'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.MultiplicativeIdentity']),
        'systemNumericsINumberBasenintOne': json['system.Numerics.INumberBase&lt;nint&gt;.One'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.INumberBase&lt;nint&gt;.One']),
        'systemNumericsINumberBasenintRadix': json['system.Numerics.INumberBase&lt;nint&gt;.Radix'] == null ? undefined : json['system.Numerics.INumberBase&lt;nint&gt;.Radix'],
        'systemNumericsINumberBasenintZero': json['system.Numerics.INumberBase&lt;nint&gt;.Zero'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.INumberBase&lt;nint&gt;.Zero']),
        'systemNumericsISignedNumbernintNegativeOne': json['system.Numerics.ISignedNumber&lt;nint&gt;.NegativeOne'] == null ? undefined : IntPtrFromJSON(json['system.Numerics.ISignedNumber&lt;nint&gt;.NegativeOne']),
    };
}

export function IntPtrToJSON(value?: IntPtr | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'size': value['size'],
        'maxValue': IntPtrToJSON(value['maxValue']),
        'minValue': IntPtrToJSON(value['minValue']),
        'system.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.AdditiveIdentity': IntPtrToJSON(value['systemNumericsIAdditiveIdentitynintnintAdditiveIdentity']),
        'system.Numerics.IBinaryNumber&lt;nint&gt;.AllBitsSet': IntPtrToJSON(value['systemNumericsIBinaryNumbernintAllBitsSet']),
        'system.Numerics.IMinMaxValue&lt;nint&gt;.MinValue': IntPtrToJSON(value['systemNumericsIMinMaxValuenintMinValue']),
        'system.Numerics.IMinMaxValue&lt;nint&gt;.MaxValue': IntPtrToJSON(value['systemNumericsIMinMaxValuenintMaxValue']),
        'system.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.MultiplicativeIdentity': IntPtrToJSON(value['systemNumericsIMultiplicativeIdentitynintnintMultiplicativeIdentity']),
        'system.Numerics.INumberBase&lt;nint&gt;.One': IntPtrToJSON(value['systemNumericsINumberBasenintOne']),
        'system.Numerics.INumberBase&lt;nint&gt;.Radix': value['systemNumericsINumberBasenintRadix'],
        'system.Numerics.INumberBase&lt;nint&gt;.Zero': IntPtrToJSON(value['systemNumericsINumberBasenintZero']),
        'system.Numerics.ISignedNumber&lt;nint&gt;.NegativeOne': IntPtrToJSON(value['systemNumericsISignedNumbernintNegativeOne']),
    };
}

