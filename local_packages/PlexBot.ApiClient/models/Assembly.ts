/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomAttributeData } from './CustomAttributeData';
import {
    CustomAttributeDataFromJSON,
    CustomAttributeDataFromJSONTyped,
    CustomAttributeDataToJSON,
} from './CustomAttributeData';
import type { SecurityRuleSet } from './SecurityRuleSet';
import {
    SecurityRuleSetFromJSON,
    SecurityRuleSetFromJSONTyped,
    SecurityRuleSetToJSON,
} from './SecurityRuleSet';
import type { Module } from './Module';
import {
    ModuleFromJSON,
    ModuleFromJSONTyped,
    ModuleToJSON,
} from './Module';
import type { TypeInfo } from './TypeInfo';
import {
    TypeInfoFromJSON,
    TypeInfoFromJSONTyped,
    TypeInfoToJSON,
} from './TypeInfo';
import type { AssemblyEntryPoint } from './AssemblyEntryPoint';
import {
    AssemblyEntryPointFromJSON,
    AssemblyEntryPointFromJSONTyped,
    AssemblyEntryPointToJSON,
} from './AssemblyEntryPoint';

/**
 * 
 * @export
 * @interface Assembly
 */
export interface Assembly {
    /**
     * 
     * @type {Array<TypeInfo>}
     * @memberof Assembly
     */
    definedTypes?: Array<TypeInfo>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Assembly
     */
    exportedTypes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Assembly
     * @deprecated
     */
    codeBase?: string;
    /**
     * 
     * @type {AssemblyEntryPoint}
     * @memberof Assembly
     */
    entryPoint?: AssemblyEntryPoint;
    /**
     * 
     * @type {string}
     * @memberof Assembly
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof Assembly
     */
    imageRuntimeVersion?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Assembly
     */
    isDynamic?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Assembly
     */
    location?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Assembly
     */
    reflectionOnly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Assembly
     */
    isCollectible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Assembly
     */
    isFullyTrusted?: boolean;
    /**
     * 
     * @type {Array<CustomAttributeData>}
     * @memberof Assembly
     */
    customAttributes?: Array<CustomAttributeData>;
    /**
     * 
     * @type {string}
     * @memberof Assembly
     * @deprecated
     */
    escapedCodeBase?: string;
    /**
     * 
     * @type {Module}
     * @memberof Assembly
     */
    manifestModule?: Module;
    /**
     * 
     * @type {Array<Module>}
     * @memberof Assembly
     */
    modules?: Array<Module>;
    /**
     * 
     * @type {boolean}
     * @memberof Assembly
     * @deprecated
     */
    globalAssemblyCache?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Assembly
     */
    hostContext?: number;
    /**
     * 
     * @type {SecurityRuleSet}
     * @memberof Assembly
     */
    securityRuleSet?: SecurityRuleSet;
}

/**
 * Check if a given object implements the Assembly interface.
 */
export function instanceOfAssembly(value: object): value is Assembly {
    return true;
}

export function AssemblyFromJSON(json: any): Assembly {
    return AssemblyFromJSONTyped(json, false);
}

export function AssemblyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Assembly {
    if (json == null) {
        return json;
    }
    return {
        
        'definedTypes': json['definedTypes'] == null ? undefined : ((json['definedTypes'] as Array<any>).map(TypeInfoFromJSON)),
        'exportedTypes': json['exportedTypes'] == null ? undefined : json['exportedTypes'],
        'codeBase': json['codeBase'] == null ? undefined : json['codeBase'],
        'entryPoint': json['entryPoint'] == null ? undefined : AssemblyEntryPointFromJSON(json['entryPoint']),
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'imageRuntimeVersion': json['imageRuntimeVersion'] == null ? undefined : json['imageRuntimeVersion'],
        'isDynamic': json['isDynamic'] == null ? undefined : json['isDynamic'],
        'location': json['location'] == null ? undefined : json['location'],
        'reflectionOnly': json['reflectionOnly'] == null ? undefined : json['reflectionOnly'],
        'isCollectible': json['isCollectible'] == null ? undefined : json['isCollectible'],
        'isFullyTrusted': json['isFullyTrusted'] == null ? undefined : json['isFullyTrusted'],
        'customAttributes': json['customAttributes'] == null ? undefined : ((json['customAttributes'] as Array<any>).map(CustomAttributeDataFromJSON)),
        'escapedCodeBase': json['escapedCodeBase'] == null ? undefined : json['escapedCodeBase'],
        'manifestModule': json['manifestModule'] == null ? undefined : ModuleFromJSON(json['manifestModule']),
        'modules': json['modules'] == null ? undefined : ((json['modules'] as Array<any>).map(ModuleFromJSON)),
        'globalAssemblyCache': json['globalAssemblyCache'] == null ? undefined : json['globalAssemblyCache'],
        'hostContext': json['hostContext'] == null ? undefined : json['hostContext'],
        'securityRuleSet': json['securityRuleSet'] == null ? undefined : SecurityRuleSetFromJSON(json['securityRuleSet']),
    };
}

export function AssemblyToJSON(value?: Assembly | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'definedTypes': value['definedTypes'] == null ? undefined : ((value['definedTypes'] as Array<any>).map(TypeInfoToJSON)),
        'exportedTypes': value['exportedTypes'],
        'codeBase': value['codeBase'],
        'entryPoint': AssemblyEntryPointToJSON(value['entryPoint']),
        'fullName': value['fullName'],
        'imageRuntimeVersion': value['imageRuntimeVersion'],
        'isDynamic': value['isDynamic'],
        'location': value['location'],
        'reflectionOnly': value['reflectionOnly'],
        'isCollectible': value['isCollectible'],
        'isFullyTrusted': value['isFullyTrusted'],
        'customAttributes': value['customAttributes'] == null ? undefined : ((value['customAttributes'] as Array<any>).map(CustomAttributeDataToJSON)),
        'escapedCodeBase': value['escapedCodeBase'],
        'manifestModule': ModuleToJSON(value['manifestModule']),
        'modules': value['modules'] == null ? undefined : ((value['modules'] as Array<any>).map(ModuleToJSON)),
        'globalAssemblyCache': value['globalAssemblyCache'],
        'hostContext': value['hostContext'],
        'securityRuleSet': SecurityRuleSetToJSON(value['securityRuleSet']),
    };
}

