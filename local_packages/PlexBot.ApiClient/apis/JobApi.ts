/* tslint:disable */
/* eslint-disable */
/**
 * PlexBot API
 * This the PlexBot Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: filip.iricanin@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ScheduledJob,
  TriggerJobRequest,
} from '../models/index';
import {
    ScheduledJobFromJSON,
    ScheduledJobToJSON,
    TriggerJobRequestFromJSON,
    TriggerJobRequestToJSON,
} from '../models/index';

export interface JobInterruptJobRequest {
    scheduledJob: ScheduledJob;
}

export interface JobTriggerJobRequest {
    triggerJobRequest: TriggerJobRequest;
}

/**
 * 
 */
export class JobApi extends runtime.BaseAPI {

    /**
     */
    async jobGetRunningJobsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ScheduledJob>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/jobs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ScheduledJobFromJSON));
    }

    /**
     */
    async jobGetRunningJobs(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ScheduledJob>> {
        const response = await this.jobGetRunningJobsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async jobInterruptJobRaw(requestParameters: JobInterruptJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['scheduledJob'] == null) {
            throw new runtime.RequiredError(
                'scheduledJob',
                'Required parameter "scheduledJob" was null or undefined when calling jobInterruptJob().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/jobs`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: ScheduledJobToJSON(requestParameters['scheduledJob']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async jobInterruptJob(requestParameters: JobInterruptJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.jobInterruptJobRaw(requestParameters, initOverrides);
    }

    /**
     */
    async jobTriggerJobRaw(requestParameters: JobTriggerJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['triggerJobRequest'] == null) {
            throw new runtime.RequiredError(
                'triggerJobRequest',
                'Required parameter "triggerJobRequest" was null or undefined when calling jobTriggerJob().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/jobs`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TriggerJobRequestToJSON(requestParameters['triggerJobRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async jobTriggerJob(requestParameters: JobTriggerJobRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.jobTriggerJobRaw(requestParameters, initOverrides);
    }

}
